[{"/Users/wuxinke/Desktop/airmemo/src/index.js":"1","/Users/wuxinke/Desktop/airmemo/src/reportWebVitals.js":"2","/Users/wuxinke/Desktop/airmemo/src/App.js":"3","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/EditorView.js":"4","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/index.js":"5","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/WaterfallView.js":"6","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/EditorBlock/index.js":"7","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Toolbar/index.js":"8","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Menubar/index.js":"9","/Users/wuxinke/Desktop/airmemo/src/config.js":"10","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Toolbar/Toolbar.js":"11","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Menubar/Menubar.js":"12","/Users/wuxinke/Desktop/airmemo/src/hooks/useRecordsLoader.js":"13","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/TabItem/index.js":"14","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/FeedItem/index.js":"15","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/TabItem/TabItem.js":"16","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/FeedItem/FeedItem.js":"17","/Users/wuxinke/Desktop/airmemo/src/hooks/useHover.js":"18","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/EditorBlock/EditorBlock.jsx":"19","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Editor.js":"20","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/index.js":"21","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/TagBlot/index.js":"22","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/TagBlot/TagBlot.js":"23"},{"size":500,"mtime":1609669231064,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1609669231065,"results":"26","hashOfConfig":"25"},{"size":380,"mtime":1610296163234,"results":"27","hashOfConfig":"25"},{"size":772,"mtime":1610293844919,"results":"28","hashOfConfig":"25"},{"size":75,"mtime":1609669231185,"results":"29","hashOfConfig":"25"},{"size":1782,"mtime":1610213132021,"results":"30","hashOfConfig":"25"},{"size":74,"mtime":1610177340372,"results":"31","hashOfConfig":"25"},{"size":55,"mtime":1609669231180,"results":"32","hashOfConfig":"25"},{"size":57,"mtime":1609669231178,"results":"33","hashOfConfig":"25"},{"size":240,"mtime":1609675703336,"results":"34","hashOfConfig":"25"},{"size":1238,"mtime":1610865656048,"results":"35","hashOfConfig":"25"},{"size":650,"mtime":1610296163243,"results":"36","hashOfConfig":"25"},{"size":1632,"mtime":1610108099574,"results":"37","hashOfConfig":"25"},{"size":57,"mtime":1609669231183,"results":"38","hashOfConfig":"25"},{"size":60,"mtime":1609669231182,"results":"39","hashOfConfig":"25"},{"size":577,"mtime":1609669231182,"results":"40","hashOfConfig":"25"},{"size":814,"mtime":1610108983903,"results":"41","hashOfConfig":"25"},{"size":697,"mtime":1610109919925,"results":"42","hashOfConfig":"25"},{"size":6311,"mtime":1610252534194,"results":"43","hashOfConfig":"25"},{"size":3938,"mtime":1610870073199,"results":"44","hashOfConfig":"25"},{"size":54,"mtime":1610293844910,"results":"45","hashOfConfig":"25"},{"size":56,"mtime":1610811375687,"results":"46","hashOfConfig":"25"},{"size":628,"mtime":1610862939155,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"13rgrxk",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},"/Users/wuxinke/Desktop/airmemo/src/index.js",[],["106","107"],"/Users/wuxinke/Desktop/airmemo/src/reportWebVitals.js",[],"/Users/wuxinke/Desktop/airmemo/src/App.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/EditorView.js",["108"],"/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/WaterfallView.js",["109","110","111"],"import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport \"./WaterfallView.css\";\nimport TabItem from \"./TabItem\";\nimport FeedItem from \"./FeedItem\";\nimport useRecordsLoader from \"../../hooks/useRecordsLoader\";\nimport { BASE_URL, TABLE_MEMO_URL } from \"./../../config\";\n\nconsole.log(\"TABLE_MEMO_URL\", TABLE_MEMO_URL);\n\nconst WaterfallView = () => {\n  const tabArr = [\"TODO\", \"FEED\", \"FLOW\"];\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n  const ref3 = useRef(null);\n  const refArr = [ref1, ref2, ref3];\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const [recordsArr, loading] = useRecordsLoader(TABLE_MEMO_URL, []);\n  console.log(\n    \"typeof recordsArr\",\n    typeof recordsArr,\n    recordsArr,\n    loading\n  );\n  const handleClickTab = (ref) => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n  const setActiveTab = useCallback(\n    (index) => {\n      setActiveTabIndex(index);\n      handleClickTab(refArr[index]);\n    },\n    [refArr]\n  );\n  return (\n    <div className=\"waterfall-wrapper\">\n      <div className=\"waterfall-tabs\">\n        {tabArr.map((tabItem, index) => (\n          <TabItem\n            tabIndex={index}\n            tabName={tabItem}\n            isActive={index === activeTabIndex}\n            setActiveTab={setActiveTab}\n          />\n        ))}\n      </div>\n      <div className=\"waterfall-content\">\n        {loading && !recordsArr ? (\n          <p>loading...</p>\n        ) : (\n          recordsArr.map((record) => {\n            return (\n              <FeedItem\n                date={record.createdTime}\n                content={record.fields.memo}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\nexport default WaterfallView;\n","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/EditorBlock/index.js",[],["112","113"],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Toolbar/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Menubar/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/config.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Toolbar/Toolbar.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Menubar/Menubar.js",["114","115"],"import React, { useState, useEffect } from \"react\";\nimport \"./Menubar.css\";\n\nconst Menubar = (props) => {\n  const { content } = props;\n  const submitContent = () => {\n    console.log(\"submit\", content);\n  };\n  return (\n    <div className=\"editor-menubar\">\n      <div className=\"editor-menubar-left\"></div>\n      <div className=\"editor-menubar-right\">\n        <button\n          className=\"submit-btn\"\n          disabled={content === \"\" || content === emptyContent ? true : false}\n          onClick={submitContent}\n        >\n          SEND\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst emptyContent = \"<p><br></p>\";\n\nexport default Menubar;\n","/Users/wuxinke/Desktop/airmemo/src/hooks/useRecordsLoader.js",["116","117","118"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"./../config\";\n\nconst useRecordsLoader = (url, deps) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const headers = {\n    \"content-type\": \"application/json\",\n    Authorization: `Bearer ${API_KEY}`,\n  };\n  useEffect(() => {\n    setLoading(true);\n    console.log(\"still loading\");\n    console.log(\"url\", url);\n    axios\n      .get(url, { headers })\n      .then((result) => {\n        const records = handleRecordsData(result.data.records);\n        setData(records);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(`error! ${e}`);\n      });\n  }, deps);\n  return [data, loading];\n};\n\nconst handleRecordsData = (records) => {\n  for (let record of records) {\n    record.createdTime = record.createdTime.replace(/T/, \" \");\n    record.createdTime = record.createdTime.replace(/.000Z/, \"\");\n    /*record.createdTime = new Date(record.createdTime);*/\n  }\n  records = records.sort((record1, record2) => {\n    return getDateTime(record2.createdTime) - getDateTime(record1.createdTime);\n    // return record1.createdTime - record2.createdTime;\n  });\n  return records;\n};\n\nconst getDateTime = (date) => {\n  date = date.substring(0, 19);\n  date = date.replace(/-/g, \"/\");\n  const timestamp = new Date(date).getTime();\n  console.log(timestamp);\n  return timestamp;\n  // // 根据毫秒数构建 Date 对象\n  // date = new Date(timestamp);\n  // // 格式化日期\n  // const dateTime = date.toLocaleString();\n  // return dateTime;\n};\nexport default useRecordsLoader;\n","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/TabItem/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/FeedItem/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/TabItem/TabItem.js",["119"],"import React, { useCallback, useState } from \"react\";\nimport \"./TabItem.css\";\n\nconst TabItem = (props) => {\n  const { tabIndex, tabName, isActive, setActiveTab } = props;\n  const handleClickTab = useCallback(() => {\n    setActiveTab(tabIndex);\n    console.log(typeof setActiveTab);\n  }, [tabIndex, setActiveTab]);\n  return isActive ? (\n    <li className=\"tab-name-active\" onClick={handleClickTab}>{tabName}</li>\n  ) : (\n    <li className=\"tab-name-default\" onClick={handleClickTab}>{tabName}</li>\n  );\n};\nTabItem.defaultProps = {\n  isActive: false,\n};\n\nexport default TabItem;\n","/Users/wuxinke/Desktop/airmemo/src/components/WaterfallView/FeedItem/FeedItem.js",["120","121","122"],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./FeedItem.css\";\nimport {useHover} from './../../../hooks/useHover';\nimport { Share } from \"@icon-park/react\";\n\nconst FeedItem = (props) => {\n  const { date, content } = props;\n  const [ref, active] = useHover();\n  return (\n    <div className=\"feed-wrapper\" ref={ref}>\n      <div className=\"feed-topbar\">\n        <div className=\"feed-topbar-date\">{date}</div>\n        {active && (\n          <div className=\"feed-topbar-icon\">\n            <Share\n              theme=\"outline\"\n              size=\"16\"\n              fill=\"#7D7D7D\"\n              strokeWidth={3}\n              strokeLinecap=\"butt\"\n            />\n          </div>\n        )}\n      </div>\n      <div className=\"feed-content\">{content}</div>\n    </div>\n  );\n};\n\nexport default FeedItem;\n","/Users/wuxinke/Desktop/airmemo/src/hooks/useHover.js",["123","124"],"import React, { useState, useEffect, useRef } from \"react\";\n\nexport const useHover = () => {\n  const [active, setActive] = useState(false);\n  const ref = useRef(null);\n  const handleMouseEnter = () => {\n    setActive(true);\n  };\n  const handleMouseLeave = () => {\n    setActive(false);\n  };\n  useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(\"mouseenter\", handleMouseEnter);\n      node.addEventListener(\"mouseleave\", handleMouseLeave);\n\n      return () => {\n        node.removeEventListener(\"mouseenter\", handleMouseEnter);\n        node.removeEventListener(\"mouseleave\", handleMouseLeave);\n      };\n    }\n  }, [ref.current]);\n\n  return [ref, active];\n};\n",["125","126"],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/EditorBlock/EditorBlock.jsx",["127","128"],"import React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport \"./EditorBlock.css\";\nimport {\n  Node,\n  Editor,\n  Transforms,\n  Range,\n  Text,\n  Point,\n  createEditor,\n  Element as SlateElement,\n} from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\n\nconst SHORTCUTS = {\n  \"*\": \"list-item\",\n  \"-\": \"list-item\",\n  \"+\": \"list-item\",\n  \">\": \"block-quote\",\n  \"-[ ]\": \"checklist-item\",\n};\nconst EditorBlock = (props) => {\n  const { getEditorContent } = props;\n  const [value, setValue] = useState(initialValue);\n  const renderElement = useCallback((props) => <Element {...props} />, []);\n  const editor = useMemo(\n    () => withShortcuts(withReact(withHistory(createEditor()))),\n    []\n  );\n\n  /**\n   * this method is used to pass the editor value to the EditorView\n   * @type {function(): void}\n   */\n  const updateEditorContent = useCallback(()=>{\n    getEditorContent(value);\n    console.log(value);\n  }, [value, getEditorContent]);\n\n  const Leaf = (props) => {\n    return (\n      <span\n        {...props.attributes}\n        style={{ fontWeight: props.leaf.bold ? \"bold\" : \"normal\" }}\n      >\n        {props.children}\n      </span>\n    );\n  };\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />;\n  }, []);\n\n  /**\n   *\n   * @param props\n   * @param editor\n   * @param next\n   * @returns {JSX.Element|*}\n   */\n  const renderMark = (props, editor, next) => {\n    if (props.mark.type === \"bold\") {\n      return <strong>{props.children}</strong>;\n    } else if (props.mark.type === \"italic\") {\n      return <em>{props.children}</em>;\n    }\n    return next();\n  };\n  const onKeyDown = (event, editor, next) => {\n    // if (event.key == \"b\" && event.metaKey) {\n    //   editor.toggleMark(\"bold\");\n    // } else if (event.key == \"i\" && event.metaKey) {\n    //   editor.toggleMark(\"italic\");\n    // } else if (event.key == \"u\" && event.metaKey) {\n    //   editor.toggleMark(\"underline\");\n    // } else {\n    //   return next(); // don't forget to call next if you don't handle it.\n    // }\n  };\n  useEffect(() => {\n    console.log(value, typeof getEditorContent);\n    updateEditorContent();\n  }, [value]);\n  return (\n    <div>\n      {/*<button*/}\n      {/*  onClick={(e) => {*/}\n      {/*    e.preventDefault();*/}\n      {/*    // editor.toggleMark(\"bold\");*/}\n      {/*    Transforms.setNodes(*/}\n      {/*      editor,*/}\n      {/*      { bold: true },*/}\n      {/*      // Apply it to text nodes, and split the text node up if the*/}\n      {/*      // selection is overlapping only part of it.*/}\n      {/*      { match: (n) => Text.isText(n), split: true }*/}\n      {/*    );*/}\n      {/*  }}*/}\n      {/*>*/}\n      {/*  bold*/}\n      {/*</button>*/}\n      <Slate\n        editor={editor}\n        value={value}\n        renderMark={renderMark}\n        onChange={(value) => setValue(value)}\n      >\n        <Editable\n          className=\"editor-input\"\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"Writing is not a way to PRESENT our thoughts, but a way to INSPIRE thinking\"\n          autoFocus\n          tabIndex={2}\n          onKeyDown={onKeyDown}\n          onCompositionEnd={(e) => {\n            Transforms.setNodes(\n              editor,\n              {\n                key: +new Date(),\n              },\n              { match: Text.isText }\n            );\n          }}\n        />\n      </Slate>\n    </div>\n  );\n};\n\nconst withShortcuts = (editor) => {\n  const { deleteBackward, insertText } = editor;\n\n  editor.insertText = (text) => {\n    const { selection } = editor;\n\n    if (text === \" \" && selection && Range.isCollapsed(selection)) {\n      const { anchor } = selection;\n      const block = Editor.above(editor, {\n        match: (n) => Editor.isBlock(editor, n),\n      });\n      const path = block ? block[1] : [];\n      const start = Editor.start(editor, path);\n      const range = { anchor, focus: start };\n      const beforeText = Editor.string(editor, range);\n      const type = SHORTCUTS[beforeText];\n\n      if (type) {\n        Transforms.select(editor, range);\n        Transforms.delete(editor);\n        const newProperties = {\n          type,\n        };\n        Transforms.setNodes(editor, newProperties, {\n          match: (n) => Editor.isBlock(editor, n),\n        });\n\n        if (type === \"list-item\") {\n          const list = { type: \"bulleted-list\", children: [] };\n          Transforms.wrapNodes(editor, list, {\n            match: (n) =>\n              !Editor.isEditor(n) &&\n              SlateElement.isElement(n) &&\n              n.type === \"list-item\",\n          });\n        }\n\n        return;\n      }\n    }\n\n    insertText(text);\n  };\n\n  editor.deleteBackward = (...args) => {\n    const { selection } = editor;\n\n    if (selection && Range.isCollapsed(selection)) {\n      const match = Editor.above(editor, {\n        match: (n) => Editor.isBlock(editor, n),\n      });\n\n      if (match) {\n        const [block, path] = match;\n        const start = Editor.start(editor, path);\n\n        if (\n          !Editor.isEditor(block) &&\n          SlateElement.isElement(block) &&\n          block.type !== \"paragraph\" &&\n          Point.equals(selection.anchor, start)\n        ) {\n          const newProperties = {\n            type: \"paragraph\",\n          };\n          Transforms.setNodes(editor, newProperties);\n\n          if (block.type === \"list-item\") {\n            Transforms.unwrapNodes(editor, {\n              match: (n) =>\n                !Editor.isEditor(n) &&\n                SlateElement.isElement(n) &&\n                n.type === \"bulleted-list\",\n              split: true,\n            });\n          }\n\n          return;\n        }\n      }\n\n      deleteBackward(...args);\n    }\n  };\n\n  return editor;\n};\n\nconst Element = ({ attributes, children, element }) => {\n  switch (element.type) {\n    case \"block-quote\":\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case \"bulleted-list\":\n      return <ul {...attributes}>{children}</ul>;\n    case \"list-item\":\n      return <li {...attributes}>{children}</li>;\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [\n      {\n        text: \"\",\n      },\n    ],\n  },\n];\nexport default EditorBlock;\n","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/Editor.js",["129","130","131","132"],"import React, { useState } from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport \"./Editor-snow.css\";\nimport Menubar from \"./Menubar\";\nimport { LinkTwo, CheckCorrect, Quote, Pound } from \"@icon-park/react\";\nimport MarkdownShortcuts from \"quill-markdown-shortcuts\";\nimport TagBlot from \"./TagBlot\";\nimport MagicUrl from \"quill-magic-url\";\nimport CustomToolbar from \"./Toolbar\";\n\n/**\n * register modules\n */\nQuill.register(\"modules/markdownShortcuts\", MarkdownShortcuts);\nQuill.register(\"formats/tag\", TagBlot);\nQuill.register(\"modules/magicUrl\", MagicUrl);\n\n/*\n * Event handler to be attached using Quill toolbar module\n * https://quilljs.com/docs/modules/toolbar/\n */\nfunction checkForTag(content, indexPosition) {\n  // let quill = Editor.reactQuillRef.getEditor();\n  // console.log('quill', quill);\n  let tag = /#(\\w+)\\s/;\n  let find = content.match(tag);\n  console.log('find', find);\n  let indexAfterInsertion = indexPosition;\n  let updated = false;\n  let comment;\n  if (find !== null) {\n    indexAfterInsertion = indexPosition - find[0].length;\n    indexAfterInsertion += find[1].length + 2;\n    updated = true;\n    let toReplacer =\n      '<tag className=\"custom-tag\" style=\"background: #eef3fe; color: #5783f7;\" title=\"tag-' +\n      find[1] +\n      '\">' +\n      find[1] +\n      \"</tag>&nbsp;\";\n    console.log(toReplacer, indexAfterInsertion);\n    comment = content.replace(/#(\\w+)\\s/, toReplacer);\n    //quill.focus();\n    //quill.setSelection(indexAfterInsertion, 0, Editor.reactQuillRef);\n    // quill.setSelection(indexAfterInsertion + 1);\n  }\n  return { content: comment, updated, indexAfterInsertion };\n}\n\nfunction insertTodo() {\n  const cursorPosition = this.quill.getSelection().index;\n  this.quill.insertText(cursorPosition, \"★\");\n  this.quill.setSelection(cursorPosition + 1);\n}\nfunction insertTag() {\n  // const range = this.quill.getSelection();\n  // if (range) {\n  //   console.log(range.index + range.length + 2);\n  //   this.quill.format(\"tag\", true);\n  //   console.log(this);\n  // }\n  const cursorPosition = this.quill.getSelection().index;\n  console.log(this);\n  this.quill.insertText(cursorPosition, \"#\");\n  this.quill.setSelection(cursorPosition + 1);\n}\n\nfunction insertQuote() {\n  const cursorPosition = this.quill.getSelection().index;\n  this.quill.formatLine(cursorPosition, 1, \"blockquote\", true);\n  this.quill.deleteText(cursorPosition - 2, 2);\n}\nconst Editor = (props) => {\n  const [editorHtml, setEditorHtml] = useState(\"\");\n  const handleChange = (content) => {\n    let editorHtml = content;\n    let newHtml = checkForTag(content);\n    if (newHtml.updated === true) {\n      editorHtml = newHtml.content;\n      console.log('new content', editorHtml);\n    }\n    setEditorHtml(editorHtml);\n  };\n\n  const formats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"color\",\n    \"background\",\n    \"formats/tag\",\n    \"tag\",\n  ];\n\n  return (\n    <div className=\"editor-snow-wrapper\">\n      <CustomToolbar />\n      <ReactQuill\n        onChange={handleChange}\n        value={editorHtml}\n        modules={Editor.modules}\n        formats={formats}\n        ref={(el) => { Editor.reactQuillRef = el }}\n        placeholder=\"Writing is not a way to PRESENT our thoughts, but a way to INSPIRE thinking\"\n      />\n      <Menubar content={editorHtml} />\n    </div>\n  );\n};\n\nEditor.modules = {\n  toolbar: {\n    container: \"#toolbar\",\n    handlers: {\n      insertTag: insertTag,\n      insertTodo: insertTodo,\n      insertQuote: insertQuote,\n    },\n  },\n  clipboard: {\n    matchVisual: false,\n  },\n  magicUrl: {\n    // Regex used to check URLs during typing\n    urlRegularExpression: /(https?:\\/\\/[\\S]+)|(www.[\\S]+)|(mailto:[\\S]+)|(tel:[\\S]+)/,\n    // Regex used to check URLs on paste\n    globalRegularExpression: /(https?:\\/\\/|www\\.|mailto:|tel:)[\\S]+/g,\n  },\n  markdownShortcuts: {},\n};\n\nexport default Editor;\n","/Users/wuxinke/Desktop/airmemo/src/components/EditorView/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/TagBlot/index.js",[],"/Users/wuxinke/Desktop/airmemo/src/components/EditorView/TagBlot/TagBlot.js",["133"],"import ReactQuill, { Quill } from \"react-quill\";\nimport \"./TagBlot.css\";\n\nlet Inline = ReactQuill.Quill.import(\"blots/inline\");\nclass TagBlot extends Inline {\n  static create(value) {\n    console.log(value);\n    let node = super.create();\n    node.setAttribute(\"style\", \"background: #eef3fe; color: #5783f7;\");\n    node.setAttribute(\"title\", value.title);\n\n    return node;\n  }\n  static value(node) {\n    return {\n      title: node.getAttribute(\"title\"),\n      style: node.getAttribute(\"style\"),\n    };\n  }\n}\nTagBlot.blotName = \"tag\";\nTagBlot.tagName = \"tag\";\nTagBlot.className = \"custom-tag\";\n\nexport default TagBlot;\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"139","line":1,"column":48,"nodeType":"140","messageId":"141","endLine":1,"endColumn":57},{"ruleId":"138","severity":1,"message":"142","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":15,"column":9,"nodeType":"145","endLine":15,"endColumn":36},{"ruleId":"134","replacedBy":"146"},{"ruleId":"136","replacedBy":"147"},{"ruleId":"138","severity":1,"message":"148","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":1,"column":26,"nodeType":"140","messageId":"141","endLine":1,"endColumn":35},{"ruleId":"138","severity":1,"message":"149","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"150","line":26,"column":6,"nodeType":"140","endLine":26,"endColumn":10},{"ruleId":"143","severity":1,"message":"151","line":26,"column":6,"nodeType":"140","endLine":26,"endColumn":10,"suggestions":"152"},{"ruleId":"138","severity":1,"message":"148","line":1,"column":30,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"148","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"153","line":1,"column":38,"nodeType":"140","messageId":"141","endLine":1,"endColumn":44},{"ruleId":"138","severity":1,"message":"149","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"143","severity":1,"message":"154","line":23,"column":6,"nodeType":"155","endLine":23,"endColumn":19,"suggestions":"156"},{"ruleId":"134","replacedBy":"157"},{"ruleId":"136","replacedBy":"158"},{"ruleId":"138","severity":1,"message":"159","line":4,"column":3,"nodeType":"140","messageId":"141","endLine":4,"endColumn":7},{"ruleId":"143","severity":1,"message":"160","line":84,"column":6,"nodeType":"155","endLine":84,"endColumn":13,"suggestions":"161"},{"ruleId":"138","severity":1,"message":"162","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"163","line":5,"column":19,"nodeType":"140","messageId":"141","endLine":5,"endColumn":31},{"ruleId":"138","severity":1,"message":"164","line":5,"column":33,"nodeType":"140","messageId":"141","endLine":5,"endColumn":38},{"ruleId":"138","severity":1,"message":"165","line":5,"column":40,"nodeType":"140","messageId":"141","endLine":5,"endColumn":45},{"ruleId":"138","severity":1,"message":"166","line":1,"column":22,"nodeType":"140","messageId":"141","endLine":1,"endColumn":27},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BASE_URL' is defined but never used.","react-hooks/exhaustive-deps","The 'refArr' array makes the dependencies of useCallback Hook (at line 34) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'refArr' in its own useMemo() Hook.","VariableDeclarator",["167"],["168"],"'useState' is defined but never used.","'React' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'headers' and 'url'. Either include them or remove the dependency array.",["169"],"'useRef' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'ref.current'. Either exclude it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["170"],["167"],["168"],"'Node' is defined but never used.","React Hook useEffect has missing dependencies: 'getEditorContent' and 'updateEditorContent'. Either include them or remove the dependency array.",["171"],"'LinkTwo' is defined but never used.","'CheckCorrect' is defined but never used.","'Quote' is defined but never used.","'Pound' is defined but never used.","'Quill' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [headers, url]",{"range":"178","text":"179"},"Update the dependencies array to be: []",{"range":"180","text":"181"},"Update the dependencies array to be: [getEditorContent, updateEditorContent, value]",{"range":"182","text":"183"},[724,728],"[headers, url]",[653,666],"[]",[2192,2199],"[getEditorContent, updateEditorContent, value]"]